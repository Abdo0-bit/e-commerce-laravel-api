{
    "openapi": "3.0.0",
    "info": {
        "title": "E-Commerce API with Stripe Payments",
        "description": "A comprehensive e-commerce API with Stripe payment integration, real-time WebSocket features, and comprehensive order management",
        "contact": {
            "email": "admin@ecommerce-api.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.1.0"
    },
    "servers": [
        {
            "url": "http://e-commerce-api-new.test/api",
            "description": "Local Development Server"
        }
    ],
    "paths": {
        "/api/admin/categories": {
            "get": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Get all categories (Admin)",
                "description": "Retrieve a list of all categories for admin management",
                "operationId": "71fce704423c89eab31adce4a23df70b",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Create new category",
                "description": "Create a new product category",
                "operationId": "810e8b9fee1619d4229208cb942c486a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Category name",
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "description": {
                                        "description": "Category description",
                                        "type": "string",
                                        "example": "Electronic devices and gadgets"
                                    },
                                    "status": {
                                        "description": "Category status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "image": {
                                        "description": "Category image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/categories/{category}": {
            "get": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Get single category (Admin)",
                "description": "Retrieve detailed information about a specific category including associated products",
                "operationId": "11a8aaa127a831f1b2178b277adfce70",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Category"
                                        },
                                        {
                                            "properties": {
                                                "products": {
                                                    "description": "Products in this category",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "iPhone 15 Pro"
                                                            },
                                                            "price": {
                                                                "type": "string",
                                                                "example": "999.00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Category] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Update category",
                "description": "Update an existing category with new information",
                "operationId": "ebbab81f1604d13a6519ce9ac4bec3ff",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated category name",
                                        "type": "string",
                                        "example": "Electronics & Gadgets"
                                    },
                                    "description": {
                                        "description": "Updated category description",
                                        "type": "string",
                                        "example": "Updated description for electronic devices"
                                    },
                                    "status": {
                                        "description": "Updated category status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "inactive"
                                    },
                                    "image": {
                                        "description": "New category image file (optional)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Category] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Categories"
                ],
                "summary": "Delete category",
                "description": "Delete a category permanently from the system. Note that this may affect associated products.",
                "operationId": "1c50d201211dea34943f752a3cbb8e87",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Category] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Cannot delete category with associated products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete category with associated products"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/dashboard": {
            "get": {
                "tags": [
                    "Admin Dashboard"
                ],
                "summary": "Get dashboard statistics",
                "description": "Retrieve key metrics and statistics for the admin dashboard including counts, revenue, and recent orders",
                "operationId": "3e557e4f514f829bac52cb3641f404d9",
                "responses": {
                    "200": {
                        "description": "Dashboard data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "products_count": {
                                            "description": "Total number of products",
                                            "type": "integer",
                                            "example": 125
                                        },
                                        "categories_count": {
                                            "description": "Total number of categories",
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "orders_count": {
                                            "description": "Total number of non-canceled orders",
                                            "type": "integer",
                                            "example": 89
                                        },
                                        "pending_orders": {
                                            "description": "Number of pending orders",
                                            "type": "integer",
                                            "example": 12
                                        },
                                        "delivered_orders": {
                                            "description": "Number of delivered orders",
                                            "type": "integer",
                                            "example": 45
                                        },
                                        "total_revenue": {
                                            "description": "Total revenue from paid orders",
                                            "type": "string",
                                            "example": "15420.75"
                                        },
                                        "latest_orders": {
                                            "description": "5 most recent orders",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 22
                                                    },
                                                    "total_amount": {
                                                        "type": "string",
                                                        "example": "299.99"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "payment_status": {
                                                        "type": "string",
                                                        "example": "unpaid"
                                                    },
                                                    "payment_method": {
                                                        "type": "string",
                                                        "example": "stripe"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-10-31T14:30:00Z"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Jane Smith"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "jane@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/orders": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Get all orders (Admin)",
                "description": "Retrieve a paginated list of all orders for admin management",
                "operationId": "d75d385d3719d4db92df549d42f08cff",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by order status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "shipped",
                                "delivered",
                                "canceled"
                            ],
                            "example": "pending"
                        }
                    },
                    {
                        "name": "payment_status",
                        "in": "query",
                        "description": "Filter by payment status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "unpaid",
                                "paid",
                                "failed",
                                "refunded"
                            ],
                            "example": "paid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "total_amount": {
                                                        "type": "string",
                                                        "example": "199.99"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "payment_status": {
                                                        "type": "string",
                                                        "example": "unpaid"
                                                    },
                                                    "payment_method": {
                                                        "type": "string",
                                                        "example": "stripe"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-10-31T12:00:00Z"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://localhost/api/admin/orders?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 95
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/orders/{order}": {
            "get": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Get single order (Admin)",
                "description": "Retrieve detailed information about a specific order including all items and customer details",
                "operationId": "7caceed0843cc943ad811f54bf707a45",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Order] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Orders"
                ],
                "summary": "Update order status",
                "description": "Update order status and payment status. When status is set to 'delivered', payment_status automatically becomes 'paid'. When status is 'canceled', the order is queued for deletion.",
                "operationId": "e1b32aea1bd9f3676b96907df31543bf",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "New order status",
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "processing",
                                            "shipped",
                                            "delivered",
                                            "canceled"
                                        ],
                                        "example": "shipped"
                                    },
                                    "payment_status": {
                                        "description": "Payment status (optional, auto-updated for some order statuses)",
                                        "type": "string",
                                        "enum": [
                                            "unpaid",
                                            "paid",
                                            "failed",
                                            "refunded"
                                        ],
                                        "example": "paid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order updated successfully"
                                        },
                                        "order": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Order] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected status is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/products": {
            "get": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Get all products (Admin)",
                "description": "Retrieve a paginated list of all products for admin management",
                "operationId": "9058305dfe0377e6cf7c5253ed664401",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://localhost/api/admin/products?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 7
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://localhost/api/admin/products?page=7"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 67
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Create new product",
                "description": "Create a new product with all required information",
                "operationId": "e78a4cd5a8e47d96daa7a5a7a13d3e30",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "quantity",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Product name",
                                        "type": "string",
                                        "example": "iPhone 15 Pro"
                                    },
                                    "description": {
                                        "description": "Product description",
                                        "type": "string",
                                        "example": "Latest iPhone with Pro features"
                                    },
                                    "price": {
                                        "description": "Product price",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 999
                                    },
                                    "quantity": {
                                        "description": "Stock quantity",
                                        "type": "integer",
                                        "example": 50
                                    },
                                    "category_id": {
                                        "description": "Category ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "description": "Product status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "featured": {
                                        "description": "Whether product is featured",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "image": {
                                        "description": "Product image file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/admin/products/{product}": {
            "get": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Get single product (Admin)",
                "description": "Retrieve detailed information about a specific product for admin management",
                "operationId": "dc965cbea110d87b418ad24fdd71d0ee",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Product] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Update product",
                "description": "Update an existing product with new information",
                "operationId": "71ea1fae53e29227ff6d0b3a8da19aab",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Product name",
                                        "type": "string",
                                        "example": "iPhone 15 Pro Max"
                                    },
                                    "description": {
                                        "description": "Product description",
                                        "type": "string",
                                        "example": "Updated iPhone with enhanced features"
                                    },
                                    "price": {
                                        "description": "Product price",
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 1199
                                    },
                                    "quantity": {
                                        "description": "Stock quantity",
                                        "type": "integer",
                                        "example": 25
                                    },
                                    "category_id": {
                                        "description": "Category ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "status": {
                                        "description": "Product status",
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    },
                                    "featured": {
                                        "description": "Whether product is featured",
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "image": {
                                        "description": "New product image file (optional)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Product] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The price must be a number."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Admin Products"
                ],
                "summary": "Delete product",
                "description": "Delete a product permanently from the system",
                "operationId": "5734b7c20eb7281dc1b68ec36d326f7e",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Product] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account and return authentication token",
                "operationId": "5d4fa5d5607ed675ba93907e1fc94534",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "remember": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user and return access token",
                "operationId": "67d6d0fdd54fba132e1b6f55ca254183",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "remember": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset email",
                "description": "Send a password reset link to the user's email address",
                "operationId": "f46fe87b31c0dadd30642d353886e6f1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "description": "Reset user password using the token sent via email",
                "operationId": "f93180f97c46f79e028b188d8763b2e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "abc123def456"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired token"
                    }
                }
            }
        },
        "/api/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get cart contents",
                "description": "Retrieve all items in the current user's cart. For authenticated users, returns the persistent cart. For guests, returns session-based cart.",
                "operationId": "77caf8dfb3349c3bfb1b009a9da076e6",
                "responses": {
                    "200": {
                        "description": "Cart retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "product_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "iPhone 15 Pro"
                                                            },
                                                            "price": {
                                                                "type": "string",
                                                                "example": "999.00"
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "subtotal": {
                                                                "type": "string",
                                                                "example": "1998.00"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "https://example.com/iphone.jpg"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total_items": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "total_amount": {
                                                    "type": "string",
                                                    "example": "2497.00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "cart_with_items": {
                                        "summary": "Cart with items",
                                        "value": {
                                            "status": "success",
                                            "data": {
                                                "items": [
                                                    {
                                                        "product_id": 1,
                                                        "name": "iPhone 15 Pro",
                                                        "price": "999.00",
                                                        "quantity": 2,
                                                        "subtotal": "1998.00",
                                                        "image": "https://example.com/iphone.jpg"
                                                    },
                                                    {
                                                        "product_id": 2,
                                                        "name": "MacBook Pro",
                                                        "price": "1999.00",
                                                        "quantity": 1,
                                                        "subtotal": "1999.00",
                                                        "image": "https://example.com/macbook.jpg"
                                                    }
                                                ],
                                                "total_items": 3,
                                                "total_amount": "3997.00"
                                            }
                                        }
                                    },
                                    "empty_cart": {
                                        "summary": "Empty cart",
                                        "value": {
                                            "status": "success",
                                            "data": {
                                                "items": [],
                                                "total_items": 0,
                                                "total_amount": "0.00"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add product to cart",
                "description": "Add a product to the cart with specified quantity. If product already exists, the quantities will be combined.",
                "operationId": "e2f81f1a8ae4af18c0cdc000e6763c0e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id"
                                ],
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product to add",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "Quantity to add (defaults to 1)",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to cart successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CartResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Product] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The product id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart/{product}": {
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update product quantity in cart",
                "description": "Update the quantity of a specific product in the cart. Set quantity to 0 to remove the item.",
                "operationId": "f70f864a2c989c79a75ee9165c8c23bd",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "quantity"
                                ],
                                "properties": {
                                    "quantity": {
                                        "description": "New quantity (0 to remove)",
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cart updated successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CartResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Product] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "quantity": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The quantity field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove product from cart",
                "description": "Remove a specific product completely from the cart",
                "operationId": "2d54fad9d568b74497bdf0f28b12e5a1",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product removed from cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product removed from cart successfully."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CartResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Product] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cart/clear": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Clear entire cart",
                "description": "Remove all items from the cart",
                "operationId": "7bff9840112ce79685786d6bc276ab39",
                "responses": {
                    "200": {
                        "description": "Cart cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Cart cleared successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/categories": {
            "get": {
                "tags": [
                    "Client Categories"
                ],
                "summary": "Get all categories",
                "description": "Retrieve a paginated list of all active categories",
                "operationId": "7aed168fba5342fdc6fd7a2a3cf6f4ab",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://localhost/api/client/categories?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://localhost/api/client/categories?page=2"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://localhost/api/client/categories?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://localhost/api/client/categories"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": null
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 15
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/client/categories/{category}": {
            "get": {
                "tags": [
                    "Client Categories"
                ],
                "summary": "Get single category with products",
                "description": "Retrieve detailed information about a specific category including all products in that category",
                "operationId": "b365127eabea815631067629df9e4971",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category ID or slug",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/Category"
                                        },
                                        {
                                            "properties": {
                                                "products": {
                                                    "description": "Products in this category",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Product"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Category] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/client/orders": {
            "get": {
                "tags": [
                    "Client - Orders"
                ],
                "summary": "Get user's orders",
                "description": "Retrieves all orders for the authenticated user, including payment status and Stripe payment information when applicable",
                "operationId": "getUserOrders",
                "responses": {
                    "200": {
                        "description": "List of user orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Client - Orders",
                    "Payments"
                ],
                "summary": "Create a new order with payment processing",
                "description": "Creates a new order from the current user's cart. Supports both COD and Stripe payment methods. For Stripe payments, returns a client_secret for frontend payment confirmation.",
                "operationId": "createOrder",
                "requestBody": {
                    "description": "Order details and payment information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "shipping_phone",
                                    "shipping_street",
                                    "shipping_city",
                                    "shipping_state",
                                    "shipping_postal_code",
                                    "payment_method"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "Customer first name",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "description": "Customer last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "shipping_phone": {
                                        "description": "Shipping phone number",
                                        "type": "string",
                                        "example": "123-456-7890"
                                    },
                                    "shipping_street": {
                                        "description": "Shipping street address",
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "shipping_city": {
                                        "description": "Shipping city",
                                        "type": "string",
                                        "example": "Anytown"
                                    },
                                    "shipping_state": {
                                        "description": "Shipping state",
                                        "type": "string",
                                        "example": "CA"
                                    },
                                    "shipping_postal_code": {
                                        "description": "Shipping postal code",
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "payment_method": {
                                        "description": "Payment method: 'cod' for Cash on Delivery, 'stripe' for credit/debit card payments",
                                        "type": "string",
                                        "enum": [
                                            "cod",
                                            "stripe"
                                        ],
                                        "example": "stripe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully."
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "stripe_order": {
                                        "summary": "Stripe Payment Order",
                                        "value": {
                                            "message": "Order created successfully.",
                                            "status": "success",
                                            "data": {
                                                "id": 22,
                                                "payment_method": "stripe",
                                                "payment_status": "unpaid",
                                                "stripe_client_secret": "pi_3SOMF4EFDrXcJGWZ18qFfsrp_secret_xxx",
                                                "total_amount": "49.99",
                                                "status": "pending"
                                            }
                                        }
                                    },
                                    "cod_order": {
                                        "summary": "Cash on Delivery Order",
                                        "value": {
                                            "message": "Order created successfully.",
                                            "status": "success",
                                            "data": {
                                                "id": 23,
                                                "payment_method": "cod",
                                                "payment_status": "unpaid",
                                                "stripe_client_secret": null,
                                                "total_amount": "29.99",
                                                "status": "pending"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Cart is empty or invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart is empty"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "payment_method": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected payment method is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Payment processing error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment processing failed"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/products": {
            "get": {
                "tags": [
                    "Client Products"
                ],
                "summary": "Get all products",
                "description": "Retrieve a paginated list of all active products available for purchase. Supports filtering by category, search, and sorting.",
                "operationId": "175dd1ad3b5dfb1610108310da894a5d",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 100)",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for product name or description",
                        "schema": {
                            "type": "string",
                            "example": "iPhone"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category ID",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort field",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "price",
                                "created_at"
                            ],
                            "example": "name"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "example": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://localhost/api/client/products?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "example": "http://localhost/api/client/products?page=5"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://localhost/api/client/products?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://localhost/api/client/products"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": null
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 67
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/client/products/{product}": {
            "get": {
                "tags": [
                    "Client Products"
                ],
                "summary": "Get single product",
                "description": "Retrieve detailed information about a specific product including related products and category information",
                "operationId": "b31316054b26d50684dce0671550ddec",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "Product ID or slug",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\\\Models\\\\Product] 999"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stripe/webhook": {
            "post": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Stripe webhook endpoint",
                "description": "Handles Stripe webhook events to automatically update order payment statuses. This endpoint is called by Stripe when payment events occur and requires proper webhook signature verification.",
                "operationId": "stripeWebhook",
                "requestBody": {
                    "description": "Stripe webhook payload",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "description": "Event type",
                                        "type": "string",
                                        "example": "payment_intent.succeeded"
                                    },
                                    "data": {
                                        "properties": {
                                            "object": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Payment intent ID",
                                                        "type": "string",
                                                        "example": "pi_3SOMF4EFDrXcJGWZ18qFfsrp"
                                                    },
                                                    "amount": {
                                                        "description": "Amount in cents",
                                                        "type": "integer",
                                                        "example": 4999
                                                    },
                                                    "currency": {
                                                        "description": "Currency code",
                                                        "type": "string",
                                                        "example": "usd"
                                                    },
                                                    "status": {
                                                        "description": "Payment status",
                                                        "type": "string",
                                                        "example": "succeeded"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "examples": {
                                "payment_succeeded": {
                                    "summary": "Payment Intent Succeeded",
                                    "value": {
                                        "type": "payment_intent.succeeded",
                                        "data": {
                                            "object": {
                                                "id": "pi_3SOMF4EFDrXcJGWZ18qFfsrp",
                                                "amount": 4999,
                                                "currency": "usd",
                                                "status": "succeeded"
                                            }
                                        }
                                    }
                                },
                                "payment_failed": {
                                    "summary": "Payment Intent Failed",
                                    "value": {
                                        "type": "payment_intent.payment_failed",
                                        "data": {
                                            "object": {
                                                "id": "pi_3SOMF4EFDrXcJGWZ18qFfsrp",
                                                "amount": 4999,
                                                "currency": "usd",
                                                "status": "requires_payment_method"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Webhook processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Webhook processed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid webhook signature",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid webhook signature"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found for payment intent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "warning"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found for payment intent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "OrderRequest": {
                "title": "Order Request",
                "description": "Request body for creating a new order",
                "required": [
                    "first_name",
                    "last_name",
                    "shipping_phone",
                    "shipping_street",
                    "shipping_city",
                    "shipping_state",
                    "shipping_postal_code",
                    "payment_method"
                ],
                "properties": {
                    "first_name": {
                        "description": "Customer first name",
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "description": "Customer last name",
                        "type": "string",
                        "example": "Doe"
                    },
                    "shipping_phone": {
                        "description": "Shipping phone number",
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "shipping_street": {
                        "description": "Shipping street address",
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "shipping_city": {
                        "description": "Shipping city",
                        "type": "string",
                        "example": "Anytown"
                    },
                    "shipping_state": {
                        "description": "Shipping state",
                        "type": "string",
                        "example": "CA"
                    },
                    "shipping_postal_code": {
                        "description": "Shipping postal code",
                        "type": "string",
                        "example": "12345"
                    },
                    "payment_method": {
                        "description": "Payment method: 'cod' for Cash on Delivery, 'stripe' for credit/debit card payments",
                        "type": "string",
                        "enum": [
                            "cod",
                            "stripe"
                        ],
                        "example": "stripe"
                    }
                },
                "type": "object"
            },
            "StripeOrderResponse": {
                "title": "Stripe Order Response",
                "description": "Response when creating an order with Stripe payment method",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Order created successfully."
                    },
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "data": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 22
                            },
                            "payment_method": {
                                "type": "string",
                                "example": "stripe"
                            },
                            "payment_status": {
                                "type": "string",
                                "example": "unpaid"
                            },
                            "stripe_client_secret": {
                                "description": "Use this with Stripe.js to confirm payment on frontend",
                                "type": "string",
                                "example": "pi_3SOMF4EFDrXcJGWZ18qFfsrp_secret_xxx"
                            },
                            "stripe_payment_intent_id": {
                                "type": "string",
                                "example": "pi_3SOMF4EFDrXcJGWZ18qFfsrp"
                            },
                            "total_amount": {
                                "type": "string",
                                "example": "49.99"
                            },
                            "status": {
                                "type": "string",
                                "example": "pending"
                            },
                            "first_name": {
                                "type": "string",
                                "example": "John"
                            },
                            "last_name": {
                                "type": "string",
                                "example": "Doe"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-10-31T12:00:00Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-10-31T12:00:00Z"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "StripeWebhookPayload": {
                "title": "Stripe Webhook Payload",
                "description": "Stripe webhook event payload structure",
                "properties": {
                    "type": {
                        "description": "Type of webhook event",
                        "type": "string",
                        "enum": [
                            "payment_intent.succeeded",
                            "payment_intent.payment_failed",
                            "payment_intent.requires_action"
                        ],
                        "example": "payment_intent.succeeded"
                    },
                    "data": {
                        "properties": {
                            "object": {
                                "properties": {
                                    "id": {
                                        "description": "Payment intent ID",
                                        "type": "string",
                                        "example": "pi_3SOMF4EFDrXcJGWZ18qFfsrp"
                                    },
                                    "amount": {
                                        "description": "Amount in cents",
                                        "type": "integer",
                                        "example": 4999
                                    },
                                    "currency": {
                                        "description": "Currency code",
                                        "type": "string",
                                        "example": "usd"
                                    },
                                    "status": {
                                        "description": "Payment intent status",
                                        "type": "string",
                                        "enum": [
                                            "succeeded",
                                            "requires_payment_method",
                                            "requires_action"
                                        ],
                                        "example": "succeeded"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "CartResource": {
                "title": "Cart Resource",
                "description": "Shopping cart with items and totals",
                "properties": {
                    "items": {
                        "description": "Cart items",
                        "type": "array",
                        "items": {
                            "properties": {
                                "product_id": {
                                    "description": "Product ID",
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "description": "Product name",
                                    "type": "string",
                                    "example": "iPhone 15 Pro"
                                },
                                "price": {
                                    "description": "Product price",
                                    "type": "string",
                                    "example": "999.00"
                                },
                                "quantity": {
                                    "description": "Item quantity",
                                    "type": "integer",
                                    "example": 2
                                },
                                "subtotal": {
                                    "description": "Line item subtotal",
                                    "type": "string",
                                    "example": "1998.00"
                                },
                                "image": {
                                    "description": "Product image URL",
                                    "type": "string",
                                    "example": "https://example.com/image.jpg"
                                },
                                "slug": {
                                    "description": "Product slug",
                                    "type": "string",
                                    "example": "iphone-15-pro"
                                },
                                "category": {
                                    "description": "Product category",
                                    "type": "string",
                                    "example": "Electronics"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "total_items": {
                        "description": "Total number of items in cart",
                        "type": "integer",
                        "example": 3
                    },
                    "total_amount": {
                        "description": "Total cart amount",
                        "type": "string",
                        "example": "2497.00"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "client",
                            "admin"
                        ],
                        "example": "client"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Sample Product"
                    },
                    "description": {
                        "type": "string",
                        "example": "Product description"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "image1.jpg",
                            "image2.jpg"
                        ]
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Electronics"
                    },
                    "image": {
                        "type": "string",
                        "example": "category.jpg",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Order model with Stripe payment integration",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "shipping_phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "shipping_street": {
                        "type": "string",
                        "example": "123 Main St"
                    },
                    "shipping_city": {
                        "type": "string",
                        "example": "New York"
                    },
                    "shipping_state": {
                        "type": "string",
                        "example": "NY"
                    },
                    "shipping_postal_code": {
                        "type": "string",
                        "example": "10001"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "shipped",
                            "delivered",
                            "cancelled"
                        ],
                        "example": "pending"
                    },
                    "payment_status": {
                        "type": "string",
                        "enum": [
                            "unpaid",
                            "paid",
                            "failed",
                            "requires_action",
                            "processing"
                        ],
                        "example": "unpaid"
                    },
                    "payment_method": {
                        "type": "string",
                        "enum": [
                            "cod",
                            "stripe"
                        ],
                        "example": "stripe"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 199.99
                    },
                    "stripe_payment_intent_id": {
                        "description": "Stripe payment intent ID",
                        "type": "string",
                        "example": "pi_3SOMF4EFDrXcJGWZ18qFfsrp",
                        "nullable": true
                    },
                    "stripe_client_secret": {
                        "description": "Stripe client secret for frontend confirmation",
                        "type": "string",
                        "example": "pi_3SOMF4EFDrXcJGWZ18qFfsrp_secret_xxx",
                        "nullable": true
                    },
                    "stripe_payment_metadata": {
                        "description": "Stripe payment metadata",
                        "type": "object",
                        "example": {
                            "order_id": 123,
                            "customer_email": "john@example.com"
                        },
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CartItem": {
                "title": "Cart Item",
                "description": "Cart item model",
                "properties": {
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Sample Product"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "total": {
                        "type": "number",
                        "format": "float",
                        "example": 199.98
                    }
                },
                "type": "object"
            },
            "Cart": {
                "title": "Shopping Cart",
                "description": "Shopping cart model",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItem"
                        }
                    },
                    "total_items": {
                        "type": "integer",
                        "example": 3
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 299.97
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication endpoints"
        },
        {
            "name": "Client - Orders",
            "description": "Order management for customers"
        },
        {
            "name": "Payments",
            "description": "Stripe payment processing and webhooks"
        },
        {
            "name": "Webhooks",
            "description": "Stripe webhook endpoints for payment status updates"
        },
        {
            "name": "Admin Categories",
            "description": "Admin Categories"
        },
        {
            "name": "Admin Dashboard",
            "description": "Admin Dashboard"
        },
        {
            "name": "Admin Orders",
            "description": "Admin Orders"
        },
        {
            "name": "Admin Products",
            "description": "Admin Products"
        },
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Client Categories",
            "description": "Client Categories"
        },
        {
            "name": "Client Products",
            "description": "Client Products"
        }
    ]
}